name: CI/CD

on:
  workflow_dispatch:
  push:

jobs:
  build-native:
    env:
      DOCKER_ACCOUNT: sogis
      DOCKER_REPO: sodata-ogd
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      #DIGITALOCEAN_TOKEN: ${{secrets.DIGITALOCEAN_TOKEN}}
      BUILD_NUMBER: ${{ github.run_number }}
      VERSION: 0.0.${{ github.run_number }}

    runs-on: self-hosted

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.2.0'
          java-version: '17'
          components: 'native-image'
          #native-image-musl: 'true'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test and build native image
        run: |
          export CONFIG_DIR=$PWD/sodata-ogd-server/src/test/resources/config/ 
          ./mvnw -Pnative test
          ./mvnw -DskipTests -Penv-prod,native package
          ls -la sodata-ogd-server/target

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: reports
          path: sodata-ogd-server/target/native-test-reports

      - name: Set up QEMU for amd64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
        if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

      - name: Build and push to registries
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: sodata-ogd-server
          file: sodata-ogd-server/Dockerfile.native-alpaquita
          labels: ${{ steps.meta.outputs.labels }}
          pull: true
          push: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}
          # tags: |
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION }}
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0.0
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION }}
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0.0
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0
          tags: |
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION }}
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0.0
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0

      # - name: Deploy to Digital Ocean App Platform
      #   run: |
      #     curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" "https://api.digitalocean.com/v2/apps/b259346a-0364-40b0-a221-6e62798f4c22/deployments"
      #   if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}

  build-jvm:
    env:
      DOCKER_ACCOUNT: sogis
      DOCKER_REPO: sodata-ogd-jvm
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      BUILD_NUMBER: ${{ github.run_number }}
      VERSION: 0.0.${{ github.run_number }}

    runs-on: runs-on: self-hosted

    permissions:
      contents: read
      packages: write

    steps:

      - name: Print new build number
        run: echo "Build number is $BUILD_NUMBER"

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: '17'
          cache: 'maven'

      - name: Test and build Jar
        run: |
          ./mvnw clean test
          ./mvnw clean -DskipTests -Penv-prod package
          ls -la sodata-ogd-server/target

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: reports
          path: sodata-ogd-server/target/surefire-reports

      - name: Set up QEMU for amd64 and arm64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
        if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

      - name: Build and push to registries
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          context: sodata-ogd-server
          file: sodata-ogd-server/Dockerfile.jvm
          labels: ${{ steps.meta.outputs.labels }}
          pull: true
          push: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}
          # tags: |
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION }}
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0.0
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION }}
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0.0
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0
          tags: |
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION }}
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0.0
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0

